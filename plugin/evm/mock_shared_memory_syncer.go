// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/subnet-evm/plugin/evm (interfaces: SharedMemorySyncer)

// Package evm is a generated GoMock package.
package evm

import (
	reflect "reflect"

	common "github.com/ethereum/go-ethereum/common"
	gomock "go.uber.org/mock/gomock"
)

// MockSharedMemorySyncer is a mock of SharedMemorySyncer interface.
type MockSharedMemorySyncer struct {
	ctrl     *gomock.Controller
	recorder *MockSharedMemorySyncerMockRecorder
}

// MockSharedMemorySyncerMockRecorder is the mock recorder for MockSharedMemorySyncer.
type MockSharedMemorySyncerMockRecorder struct {
	mock *MockSharedMemorySyncer
}

// NewMockSharedMemorySyncer creates a new mock instance.
func NewMockSharedMemorySyncer(ctrl *gomock.Controller) *MockSharedMemorySyncer {
	mock := &MockSharedMemorySyncer{ctrl: ctrl}
	mock.recorder = &MockSharedMemorySyncerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSharedMemorySyncer) EXPECT() *MockSharedMemorySyncerMockRecorder {
	return m.recorder
}

// IncLastApplied mocks base method.
func (m *MockSharedMemorySyncer) IncLastApplied(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncLastApplied", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncLastApplied indicates an expected call of IncLastApplied.
func (mr *MockSharedMemorySyncerMockRecorder) IncLastApplied(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncLastApplied", reflect.TypeOf((*MockSharedMemorySyncer)(nil).IncLastApplied), arg0)
}

// SyncSharedMemoryToState mocks base method.
func (m *MockSharedMemorySyncer) SyncSharedMemoryToState(arg0 common.Hash) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SyncSharedMemoryToState", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SyncSharedMemoryToState indicates an expected call of SyncSharedMemoryToState.
func (mr *MockSharedMemorySyncerMockRecorder) SyncSharedMemoryToState(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SyncSharedMemoryToState", reflect.TypeOf((*MockSharedMemorySyncer)(nil).SyncSharedMemoryToState), arg0)
}
